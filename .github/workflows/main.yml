name: Laravel
on:
  workflow_dispatch:
  push:
    branches:
      - master
    paths-ignore:
      - '.github/workflows/**'
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          submodules: recursive

      - name: Copy env files
        run: |
          cp .env.example .env
          cp .env.laradock laradock/.env

      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: docker-${{ github.sha }}

      - name: Start Docker containers
        run: docker compose -f laradock/docker-compose.yml up -d workspace mysql

      - name: Wait for MySQL
        run: |
          sleep 15
          docker compose -f laradock/docker-compose.yml exec -T mysql mysqladmin ping -h localhost -uroot -p123123

      - name: Install composer dependencies
        run: docker compose -f laradock/docker-compose.yml exec -T workspace composer install --no-interaction --prefer-dist

      - name: Generate Laravel APP_KEY
        run: docker compose -f laradock/docker-compose.yml exec -T workspace php artisan key:generate --force

      - name: Install npm dependencies
        run: docker compose -f laradock/docker-compose.yml exec -T workspace npm install

      - name: Run build script (npn run build)
        run: docker compose -f laradock/docker-compose.yml exec -T workspace npm run build

      - name: Run Laravel tests
        run: docker compose -f laradock/docker-compose.yml exec -T workspace php artisan test --parallel --stop-on-failure

      - name: Stop Docker containers
        if: always()
        run: docker compose -f laradock/docker-compose.yml down

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: success() && github.ref == 'refs/heads/master'

    steps:
      - name: Deploy to Production Server
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.DEPLOY_SSH_KEY }}
          port: ${{ secrets.DEPLOY_PORT }}
          script: |
            echo "ðŸš€ Starting deployment on production server..."
            cd /home/ubuntu/www

            echo "â†’ Pulling latest changes"

            git fetch origin master
            git reset --hard origin/master

            cd /home/ubuntu/www/laradock

            echo "â†’ Installing composer dependencies"
            docker compose -f --user=laradock exec workspace composer install --no-interaction --prefer-dist --optimize-autoloader

            echo "â†’ Running database migrations"
            docker compose -f --user=laradock exec workspace php artisan migrate --force

            echo "â†’ Clearing and caching configs"
            docker compose -f --user=laradock exec workspace php artisan config:clear
            docker compose -f --user=laradock exec workspace php artisan config:cache
            docker compose -f --user=laradock exec workspace php artisan route:cache

            echo "â†’ Installing npm packages and rebuilding assets"
            docker compose -f --user=laradock exec workspace npm install
            docker compose -f --user=laradock exec workspace npm run build

            echo "âœ… Deployment completed successfully!"
